#include <stdio.h>
int findMin(int* arr, int n);
#define Min(a,b) ((a)>(b) ? (a):(b));
int findMax(int* arr, int n);
int main(void)
{
	int num = 0;
	int* dp = (int*)malloc(sizeof(int) * 10001);
	int kiki[100];
	int ans;
	int p = 0;
	int arr[100];
	int temp;
	for (int i = 0; i < 10001; i++)
		*(dp + i) = -1;
	int n, k;
	scanf("%d %d", &n, &k);
	for (int i = 0; i < n; i++)
	{
		scanf("%d", &arr[i]);
		if (arr[i] < 10000)
			dp[arr[i] - 1] = 1;
	}
	temp = findMin(arr, n);
	for (int i = temp; i < k; i++)
	{
		for (int j = 0; j < n; j++)
		{
			if ((i - arr[j] >= 0) &&(dp[i - arr[j]] != -1) && dp[i] != 1)
			{

				kiki[p] = dp[i - arr[j]];
				p++;
			}
		}
		if (p != 0)
		{
			ans = findMin(kiki, p);
			dp[i] = ans + 1;
			p = 0;
		}
	}

	printf("%d\n", dp[k-1]);
	return 0;
	
}

int findMin(int* arr, int n)
{
	int min = 100000;
	for (int i = 0; i < n; i++)
	{
		if (arr[i] < min)
			min = arr[i];
	}
	return min;
}
int findMax(int* arr, int n)
{
	int max = 0;
	for (int i = 0; i < n; i++)
	{
		if (arr[i] > max)
			max = arr[i];
	}
	return max;
}
